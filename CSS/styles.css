:root {
    --chairWidthOne: 25vh;
    --chairWidthTwo: 20vh;
    --chairWidthThree: 15vh;
    --chairWidthFour: 10vh;
    --chairWidthAllCenter: 108vh;
}

body {
    margin: 0;
    position: relative;
    background-color: beige;
    overflow: hidden;
    transition: background-color 3s;
}

.blackBody {
    background-color: #000000;
}

.flexCenter {
    display: flex;
    justify-content: center;
    align-items: center;
}

#curtain {
    width: 40vw;
    height: 50vh;
    background: linear-gradient(90deg, 
        #923232 25%, 
        #000000 50%, 
        #343030 60%, 
        #982f2f 95%);
    background-size: 1vw 100%;
    box-shadow: 
        inset 0 -10px 10px rgba(0, 0, 0, 0.5),
        inset 0 20px 10px rgba(0, 0, 0, 0.5);
    position: absolute;
}

#rugArea {
    display: flex;
    overflow: hidden;
    justify-content: center;
}

.seatingRug {
    margin: 0;
    border-bottom: 1.5vh solid rgb(235, 235, 157);
    background-color: rgba(185, 86, 86);
    box-sizing: border-box;
    
}

#theaterSpace {
    margin: 0;
    display: grid;
    height: 100vh;
    grid-template-rows: 2fr .3fr 2.5fr 1fr; 
    overflow: hidden;
    position: absolute;
    top: 50%;
    z-index: 2;
    transition: opacity 3s;
    /* why is this not needed? */
}

#seatingArea {
    display: grid;
    grid-template-rows: auto auto auto auto;
}

#stepArea {
    display: grid;
    grid-template-columns: var(--chairWidthAllCenter) var(--chairWidthOne) var(--chairWidthAllCenter) var(--chairWidthOne) var(--chairWidthAllCenter); 
    transform: translateY(-11.15vh);
}

.step {
    background-color: #000000;
    border: 1hv solid black;
    box-sizing: border-box;
}

#walkingArea {
}

#stageArea {
    border: rgb(0, 0, 0) solid 1vh; 
    background-color: rgb(31, 30, 30); 
    transform: translateY(25%);
    z-index: 1;
    /* why do I have to do this? */
}

#firstRow {
    display:grid; 
    grid-template-columns: 1fr var(--chairWidthOne) auto var(--chairWidthOne) 1fr; 
    transform: translateY(-80%);
}

#secondRow {
    display:grid; 
    grid-template-columns: 1fr var(--chairWidthTwo) auto var(--chairWidthTwo) 1fr; 
    transform: translateY(-60%);
}

#thirdRow {
    display:grid; 
    grid-template-columns: 1fr var(--chairWidthThree) auto var(--chairWidthThree) 1fr; 
    transform: translateY(-40%);
}

#fourthRow {
    display:grid; 
    grid-template-columns: 1fr var(--chairWidthFour) auto var(--chairWidthFour) 1fr; 
    transform: translateY(-20%);
}

.chairGroupLeft {
    display: flex;
    justify-content: flex-end;
    white-space: nowrap;
    overflow: hidden;
}

.chairGroupCenter {
    display: flex;
    justify-content: center;
    white-space: nowrap;
    overflow: hidden;
}

.chairGroupRight {
    display: flex;
    justify-content: flex-start;
    white-space: nowrap;
    overflow: hidden;
}

.firstRowChair {
    width: var(--chairWidthOne);
    display:inline-block;
}

.secondRowChair {
    width: var(--chairWidthTwo);
    display:inline-block;
}

.thirdRowChair {
    width: var(--chairWidthThree);
    display:inline-block;
}

.fourthRowChair {
    width: var(--chairWidthFour);
    display:inline-block;
}

#centerRug {
    width: 108vh;
    height: 38vh;
    clip-path: polygon(35% 0%, 0% 100%, 100% 100%, 65% 0%);
    position: absolute;
    transition: opacity 3s, visibility 3s;
}

#leftRug {
    width: 162vh;
    height: 38vh;
    clip-path: polygon(75% 0%, 0% 100%, 65% 100%, 100.5% 0%);
    position: absolute;
    transform: translateX(-64%);
    transition: opacity 3s, visibility 3s;

    /* cheating - this doesn't work */
}

#rightRug {
    width: 162vh;
    height: 38vh;
    clip-path: polygon(-.5% 0%, 35% 100%, 100% 100%, 25% 0%);
    position: absolute;
    transform: translateX(64%);
    transition: opacity 3s, visibility 3s;
    /* cheating - this doesn't work */
}



#screen {
    display: grid;
    grid-template-columns: 1fr 2fr .5fr 2fr 1fr;
    width: 80vw; 
    height: 75vh; 
    border: black solid 1vh; 
    background-color: rgba(255, 255, 255, 0.759); 
    position: absolute; 
    left: 50%; 
    top: 100%; 
    transform: translate(-50%, 10%); 
    /* why do I need the 100% top and 10%? */
    z-index: 2;
}

#reelFigure {
    position: absolute; 
    top: 65vh;
    left: 15vh;
    z-index: 3; 
    text-align: center; 
    font-weight: bolder; 
    font-size: 2vh;
    font-family:'Times New Roman', Times, serif;
    font-weight: bolder;
    color: aliceblue;
}

#reelSVG {
    height: 25vh; 
    width: auto;
}

.spinningReel {
    animation: spinReel 1.5s linear infinite;

}

@keyframes spinReel {
    100% {
        transform: rotate(360deg);
    }
}

#popcornFigure {
    position: absolute; 
    right: 15vh; 
    top: 65vh; 
    z-index: 3;
    font-family:'Times New Roman', Times, serif;
    text-align: center; 
    font-weight: bolder; 
    font-size: 2vh;
    color:aliceblue
}

#popcornSVG {
    height: 25vh; 
    width: auto;
}



.displayOn {
    display:
}

.lightsOff {
    opacity: .1;
}

.hidden {
    opacity: 0;
    visibility: hidden;
}

#reelContainer {
    position: relative;
    display: inline-block;
    
}

#projectorGlow {
    position: absolute;
    top: 100%;
    left: 100%;
    width: 300px;
    height: 300px;
    background: radial-gradient(circle, rgba(255,255,255,0.5), rgba(255,255,255,0) 70%);
    transform: translate(-50%, -50%) rotate(45deg);
    animation: projectorGlow 2s infinite alternate;
    pointer-events: none;
    z-index: 1;
}

@keyframes projectorGlow {
    from {
        opacity: 0.3;
        transform: translate(-50%, -50%) rotate(45deg) scale(1);
    }
    to {
        opacity: 0.6;
        transform: translate(-50%, -50%) rotate(45deg) scale(1.2);
    }
}